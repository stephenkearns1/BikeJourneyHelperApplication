@model IEnumerable<BikeJourneyHelperApplication.Models.Garage>

<div class="container">
    @{
        ViewBag.Title = "Index";
    }

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OpeningHours)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PumpsAvailable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lng)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OpeningHours)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PumpsAvailable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lng)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.GarageID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.GarageID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.GarageID })
                </td>
            </tr>
        }

    </table>
</div>

<section class="bg-primary" id="about">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 text-center">
                <h2 class="section-heading">We've got what you need!</h2>
                <hr class="light">
                <p class="text-faded">Start Bootstrap has everything you need to get your new website up and running in no time! All of the templates and themes on Start Bootstrap are open source, free to download, and easy to use. No strings attached!</p>

            </div>

            <div class="col-lg-4 col-lg-offset-4">

                <input type="text" id="shopid" placeholder="shopid" />


            </div>

            <div class="col-lg-8 col-lg-offset-2 text-center">

                <a href="#map_section" id="getdirection_btn" onclick="GetSearchedShopLocation();" class="page-scroll btn btn-default btn-xl sr-button">Get Directions</a>
            </div>

        </div>
    </div>
</section>
<section class="bg-white" id="map_section">



    <div class="col-lg-8" id="map_canvas">


    </div>

    <div class="col-lg-4" id="right-panel">


    </div>



</section>




<!-- Script init the google maps api and places the map within the map_canvas div-->
<!-- Script init the google maps api and places the map within the map_canvas div-->
<script type="text/javascript">

    $(document).ready(function () {

        $("#map_canvas").css("width", "100%");
        $('#right-panel').css("width", "0px");


    });

        var directionServices;
        var directionDisplay;
        var userPosition;
        var map;
        function MapIntialize() {
            directionServices = new google.maps.DirectionsService();
            directionDisplay = new google.maps.DirectionsRenderer();
            var testSearch = document.getElementById("searchBtn");
            //tells the api to use the new UI
            // google.maps.visualRefresh = true;
            //var Dublin = new google.maps.LatLng(53.3498, 6.2603);

            //get the user geo cordinates

            var mapOptions = {

                zoom: 14,
                //center: userPosition,
                // mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
                mapTypeControl: false
            };




            map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
            //map.setCenter(userPosition);
            directionDisplay.setMap(map);
            directionDisplay.setPanel(document.getElementById('right-panel'));


            //get the geo corridnates of the user and create and focus the map
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    userPosition = pos;
                    map.setCenter(userPosition);
                    console.log(userPosition);

                }, function () {
                    alert("The Geolocation service failed." + "\n" + "Your browswer doesnt support Geolocation");
                });
            } else {
                alert("The Geolocation service failed." + "\n" + "Your browswer doesnt support Geolocation");
            }




            // map.controls[google.maps.ControlPosition.TOP_LEFT].push('destination');






           /* document.getElementById("getdirection_btn").addEventListener("click", function(){
                GetSearchedShopLocation();
            }); */


            //set up the the event handler to search for route of
            /*  var onChangeEventHandler = function () {
                  window.alert('Made it to onChangeHandler');
                  //call the calculate route function
                  calculateUserRouteAndDisplay(directionServices, directionDisplay, userPosition);
              }; */

            //  document.getElementById('searchBtn').addEventListener('click', onChangeEventHandler);



        }

        function calculateUserRouteAndDisplay(directionServices, directionDisplay, userPosition, userDestination) {

            window.alert('made it to calculate routes');

            //var userPos = getUserLocation();
            console.log("users destinaton geo: " + userDestination);

            directionServices.route({

                origin: userPosition,
                destination: userDestination,
                travelMode: 'BICYCLING'


            }, function (response, status) {

                if (status === 'OK') {
                    console.log(response);
                    $("#map_canvas").css("width", "60%");
                    $('#right-panel').css("width", "40%");
                    $('#right-panel').css("height", "400px");
                    directionDisplay.setDirections(response);


                } else {
                    window.alert('Directions request failed due to' + status);
                }

            });


        }

        function GetSearchedShopLocation() {
            window.alert("Made it to getLocation");
            var shopID = { 'GarageID': $('#shopid').val() };
            console.log(shopID);
            $.ajax({
                url: '@Url.Action("GetLocation", "Garages")',
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(shopID),
                dataType: "json",
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                },
                success: function (resp) {

                    // Hide the "busy" gif:
                    //   $("#divProcessing").hide();
                    var userLng = resp.Lat;
                    var userLat = resp.Lng;
                    var userDestination = new google.maps.LatLng(parseFloat(userLng), parseFloat(userLat));
                    //var userDestination = new google.maps.LatLng(resp.Lat, resp.Lng);
                    calculateUserRouteAndDisplay(directionServices, directionDisplay, userPosition, userDestination);
                    console.log(resp);
                    alert(resp);

                    // Do something useful with the data:
                    //  $("<h3>" + resp.Title + " " + resp.Publisher + "</h3>").appendTo("#divResult");
                },error: function (jqXHR, status, err) {
                    alert("Garage does not exist");
                }
            });

        }



</script>

<!--<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCsAesXr_ahVup11biiPr5y5qPr3uMRI1A&libraries=places&callback=MapIntialize"
        async defer></script>-->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCsAesXr_ahVup11biiPr5y5qPr3uMRI1A&callback=MapIntialize"
        async defer></script>



