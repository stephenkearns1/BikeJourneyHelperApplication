@model IEnumerable<BikeJourneyHelperApplication.Models.DublinBike>


<div class="container">
    @{
        ViewBag.Title = "Index";
    }


    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table" id="bikes_table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DublinBikeID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>


            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DublinBikeID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.DublinBikeID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.DublinBikeID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.DublinBikeID })
                </td>
            </tr>
        }

    </table>

</div>
<section class="bg-primary" id="about">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 text-center">
                <h2 class="section-heading">We've got what you need!</h2>
                <hr class="light">
                <p class="text-faded">Start Bootstrap has everything you need to get your new website up and running in no time! All of the templates and themes on Start Bootstrap are open source, free to download, and easy to use. No strings attached!</p>

            </div>

            <div class="col-lg-4 col-lg-offset-4">

                <input type="text" id="shopid" placeholder="shopid" />


            </div>

            <div class="col-lg-8 col-lg-offset-2 text-center">

                <a href="#map_section" id="getdirection_btn" onclick="GetSearchedShopLocation();" class="page-scroll btn btn-default btn-xl sr-button">Get Directions</a>
            </div>

        </div>
    </div>
</section>
<section class="bg-white" id="map_section">




    <div class="col-lg-8" id="map_canvas">


    </div>

    <div class="col-lg-4" id="right-panel">


    </div>
</section>
<section class="" id="real_time_info_bikes">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 text-center">
                <h2 class="section-heading">Bike Station Real Time Information:</h2>
                <hr class="light">
                <p class="pCustStyle" id="bikeStation_name"></p>
                <p class="pCustStyle" id="bikeStation_available_stands"></p>
                <p class="pCustStyle" id="bikeStation_available_bikes"></p>
                <p class="pCustStyle" id="bikeStation_banking"></p>
                <p class="pCustStyle" id="bikeStation_bike_stands"></p>
                <p class="pCustStyle" id="bikeStation_bonus"></p>
                <p class="pCustStyle" id="bikeStation_last-update"></p>
            </div>



            <table class="table table-responsive table-hover" id="realtime">
                <thead>
                    <tr>
                        <th> Station Name:</th>
                        <th>Available Bike Stands</th>
                        <th> Available Number of Bikes</th>
                        <th> Banking </th>
                        <th> Number of Bike stands</th>
                        <th> Bonus </th>
                        <th> Last update </th>
                    </tr>
                    <tr id="info_tr">
                        <td id="stationName_col"></td>
                        <td id="availBikeStands_col"></td>
                        <td id="availNumBikes_col"></td>
                        <td id="banking_col"></td>
                        <td id="numBikeStand_col"></td>
                        <td id="bonus_col"></td>
                        <td id="lastUpdate_col"></td>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</section>




<!-- Script init the google maps api and places the map within the map_canvas div-->
<!-- Script init the google maps api and places the map within the map_canvas div-->
<script type="text/javascript">

    $(document).ready(function () {

     

        /*

         Due to Dublinbikes api does not allowing for the cross sharing of resources (CORS),
         as there is no allow-origin-header present on the request resource, so it does not allow for cross site request to be made
         For a soultion to this I am making a direct call from a server (Cloud9) which allows CORS to the dublin bikes api ('Doumentation isnt the best :(' ) and returning the response when request by the locally by the ajax request


        */
        $("#map_canvas").css("width", "100%");
        $('#right-panel').css("width", "0px");

            $('#bikes_table td').mouseover(function () {
                var currentRow = $(this).closest("tr");
                var bikeStationId = currentRow.find('td:eq(0)').text();
                alert("Bike station" + bikeStationId);
                GetRealTimeStationInfo(bikeStationId)
            });



         });
        var directionServices;
        var directionDisplay;
        var userPosition;
        var map;
        function MapIntialize() {
            directionServices = new google.maps.DirectionsService();
            directionDisplay = new google.maps.DirectionsRenderer();
            var testSearch = document.getElementById("searchBtn");
            //tells the api to use the new UI
            // google.maps.visualRefresh = true;
            //var Dublin = new google.maps.LatLng(53.3498, 6.2603);

            //get the user geo cordinates

            var mapOptions = {

                zoom: 14,
                //center: userPosition,
                // mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
                mapTypeControl: false
            };




            map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
            //map.setCenter(userPosition);
            directionDisplay.setMap(map);
            directionDisplay.setPanel(document.getElementById('right-panel'));


            //get the geo corridnates of the user and create and focus the map
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    userPosition = pos;
                    map.setCenter(userPosition);
                    console.log(userPosition);

                }, function () {
                    alert("The Geolocation service failed." + "\n" + "Your browswer doesnt support Geolocation");
                });
            } else {
                alert("The Geolocation service failed." + "\n" + "Your browswer doesnt support Geolocation");
            }




           


        }

        function calculateUserRouteAndDisplay(directionServices, directionDisplay, userPosition, userDestination) {

            window.alert('made it to calculate routes');

            //var userPos = getUserLocation();
            console.log("users destinaton geo: " + userDestination);

            directionServices.route({

                origin: userPosition,
                destination: userDestination,
                travelMode: 'BICYCLING'


            }, function (response, status) {

                if (status === 'OK') {
                    console.log(response);
                    $("#map_canvas").css("width", "60%");
                    $('#right-panel').css("width", "40%");
                    $('#right-panel').css("height", "400px");
                    directionDisplay.setDirections(response);


                } else {
                    window.alert('Directions request failed due to' + status);
                }

            });


        }

        function GetSearchedShopLocation() {
            window.alert("Made it to getLocation");
            var shopID = { 'DublinBikeID': $('#shopid').val() };
            console.log(shopID);
            $.ajax({
                url: '@Url.Action("GetLocation", "DublinBikes")',
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(shopID),
                dataType: "json",
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                },
                success: function (resp) {

                    // Hide the "busy" gif:
                    //   $("#divProcessing").hide();
                    var userLng = resp.Lat;
                    var userLat = resp.Lng;
                    var userDestination = new google.maps.LatLng(parseFloat(userLng), parseFloat(userLat));
                    //var userDestination = new google.maps.LatLng(resp.Lat, resp.Lng);
                    calculateUserRouteAndDisplay(directionServices, directionDisplay, userPosition, userDestination);
                    console.log(resp);
                    alert(resp);

                    // Do something useful with the data:
                    //  $("<h3>" + resp.Title + " " + resp.Publisher + "</h3>").appendTo("#divResult");
                }, error: function (jqXHR, status, err) {
                    alert("Station does not exist");
                }
            });

        }


    function GetRealTimeStationInfo(bikeStationId) {
        var stationNum = parseInt(bikeStationId);

        $.ajax({
            url: "https://api.jcdecaux.com/vls/v1/stations/" + stationNum + "?contract=Dublin&apiKey=ff081760b867231eb570581fa1a7453d9ec636f4",
            type: "GET",
            Accept: "application/json",

            error: function (xhr, status, error) {
                alert(xhr.responseText);
            },
            success: function (resp) {
                console.log(resp);
                alert(resp.available_bike_stands);
                //gets the date and time of last update
                var date = new Date(resp.last_update);
                alert(date);
                document.getElementById('stationName_col').innerHTML =  resp.name;
                document.getElementById('availBikeStands_col').innerHTML = resp.available_bike_stands;
                document.getElementById('availNumBikes_col').innerHTML =  resp.available_bikes;
                document.getElementById('banking_col').innerHTML =  resp.banking;
                document.getElementById('numBikeStand_col').innerHTML = resp.bike_stands;
                document.getElementById('bonus_col').innerHTML = resp.bonus;
                document.getElementById('lastUpdate_col').innerHTML = date;
              
                /*
                $("#bikeStation_name").text("Station name:" + resp.name);
                $("#bikeStation_available_stands").text("Avaiable bike stands:" + resp.available_bike_stands);
                $("#bikeStation_available_bikes").text("Avaiable bikes:" + resp.available_bikes);
                $("#bikeStation_banking").text("Banking:" + resp.available_bikes);
                $("#bikeStation_bike_stands").text("Bike Stands:" + resp.bike_stands);
                $("#bikeStation_bonus").text("Bike Stands:" + resp.bonus);
                $("#bikeStation_last-update").text("Lasted updated: " + date);
                */
            }
        });
    }


    /*
    function GetRealTimeStationInfo(bikeStationId) {
        var stationNum = parseInt(bikeStationId);
        $.ajax({
            url: 'https://dublinbikes-api-stephenkearns1.c9users.io/',
            type: "POST",
            Accept: "application/json",
            data: { bikeStationNum:stationNum},
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            },
            success: function (resp) {
                console.log(resp);
                alert(resp.available_bike_stands);
                //gets the date and time of last update
                var date = new Date(resp.last_update);
                alert(date);
                $("#bikeStation_name").text("Station name:" + resp.name);
                $("#bikeStation_available_stands").text("Avaiable bike stands:" + resp.available_bike_stands);
                $("#bikeStation_available_bikes").text("Avaiable bikes:" + resp.available_bikes);
                $("#bikeStation_banking").text("Banking:" + resp.available_bikes);
                $("#bikeStation_bike_stands").text("Bike Stands:" + resp.bike_stands);
                $("#bikeStation_bonus").text("Bike Stands:" + resp.bonus);
                $("#bikeStation_last-update").text("Lasted updated: " + date);

            }
        });
    }

    */
    /* api key for dublin bikes: ff081760b867231eb570581fa1a7453d9ec636f4 */

</script>

<!--<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCsAesXr_ahVup11biiPr5y5qPr3uMRI1A&libraries=places&callback=MapIntialize"
        async defer></script>-->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCsAesXr_ahVup11biiPr5y5qPr3uMRI1A&callback=MapIntialize"
        async defer></script>
